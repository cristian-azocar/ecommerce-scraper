@use 'sass:map';
@use '../../scss/abstracts/mixins' as *;
@use '../../scss/abstracts/variables' as *;

$sizes: (
  'small': (
    'height': var(--size-sm),
    'padding': 0 var(--space-3),
    'font-size': var(--font-size-sm)
  ),
  'medium': (
    'height': var(--size-md),
    'padding': 0 var(--space-4),
    'font-size': var(--font-size-md)
  ),
  'large': (
    'height': var(--size-lg),
    'padding': 0 var(--space-6),
    'font-size': var(--font-size-lg)
  )
);

.button {
  align-items: center;
  appearance: none;
  border: 1px solid var(--color-gray-300);
  border-radius: var(--border-radius);
  color: var(--color-text-primary);
  display: inline-flex;
  font-size: map.get($sizes, 'medium', 'font-size');
  font-weight: var(--font-weight-semibold);
  height: map.get($sizes, 'medium', 'height');
  justify-content: center;
  padding: map.get($sizes, 'medium', 'padding');
  position: relative;
  transition: 250ms ease;
  transition-property: color, background-color, box-shadow;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  width: auto;

  @include hover {
    background-color: var(--color-gray-200);
  }

  &:focus {
    box-shadow: var(--shadow-outline);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.4;
  }

  &-full-width {
    width: 100%;
  }

  &-icon {
    align-items: center;
    display: inline-flex;
    height: 1em;
    justify-content: center;
    width: 1em;

    &:first-child {
      margin-right: 0.5rem;
    }

    &:last-child {
      margin-left: 0.5rem;
    }
  }

  /* Variants with no color */
  &-solid {
    background-color: var(--color-gray-300);
    border-color: transparent;

    @include hover {
      background-color: var(--color-gray-400);
    }
  }

  &-text {
    border-color: transparent;
  }
}

/* Variants with color */
@each $name, $value in $colors {
  .button-#{$name} {
    color: $value;

    &.button-solid {
      background-color: $value;
      color: var(--color-white);

      @include hover {
        background-color: var(--color-#{$name}-dark);
      }
    }

    &.button-outlined {
      border-color: $value;

      @include hover {
        background-color: $value;
        color: var(--color-white);
      }
    }
  }
}

/* Sizes */
@each $name, $value in $sizes {
  .button-#{$name} {
    font-size: map.get($value, 'font-size');
    height: map.get($value, 'height');
    padding: map.get($value, 'padding');
  }
}
